<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sys_attachment</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sys_attachment">table_name=x_cria_livestock_t_import_cvi^content_type=text/xml^ORcontent_type=application/xml^EQ<item endquery="false" field="table_name" goto="false" newquery="false" operator="=" or="false" value="x_cria_livestock_t_import_cvi"/>
            <item endquery="false" field="content_type" goto="false" newquery="false" operator="=" or="false" value="text/xml"/>
            <item endquery="false" field="content_type" goto="false" newquery="false" operator="=" or="true" value="application/xml"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Import CVI XML1</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var animGroup = [];
	var anim = {"age": {}, "breed": {}, "sex": {}, "inspection": {}, "species": {}, "id": {}, "test": []};
	var animTestDet = {"TestCode": {}, "Name": {}, "Result": {}, "Date": {}, "Lab": {}, "AccNum": {}};
	var accGroup = [];
	var acc = {"id": {}, "date": {}, "num": {}, "lab": {}};
	var acctemp;
	var gr = new GlideRecord('x_cria_livestock_t_import_cvi');
	gr.addQuery('sys_id', current.table_sys_id);
	gr.query();
	if(gr.next()){
		gs.log("************* I found the record");
		var cvihelper = new XMLHelper();
		var cvidata = cvihelper.toObject(current);

		// General eCVI information
		gr.record_id = cvidata['@CviNumber'].toString();
		gr.shipment_date = cvidata['@ShipmentDate'].toString();
		gr.entry_permit_number = cvidata['@EntryPermitNumber'].toString();
		gr.move_purpose = cvidata.MovementPurposes.MovementPurpose[0].toString();

		// Veterinarian information
		gr.vet_lic_state = cvidata.Veterinarian['@LicenseState'].toString();
		gr.vet_lic_num = cvidata.Veterinarian['@LicenseNumber'].toString();
		gr.vet_nat_accred = cvidata.Veterinarian['@NationalAccreditationNumber'].toString();
		gr.u_vet_ref = cvidata.Veterinarian.Person.Name.toString();
		gr.vet_phone = cvidata.Veterinarian.Person.Phone[0]['@Number'].toString();
		gr.vet_email = cvidata.Veterinarian.Person.Email[0]['@Address'].toString();
		gr.vet_address = cvidata.Veterinarian.AddressBlock.toString();

		// Origin information - using this information instead of the Consignor information
		gr.consignor_premid = cvidata.Origin.PremId.toString();
		gr.consigner = cvidata.Origin.PremName.toString();
		gr.consignor_street = cvidata.Origin.Address.Line1.toString() + '\n' + cvidata.Origin.Address.Line2.toString();
		gr.consignor_city = cvidata.Origin.Address.Town.toString();
		gr.consignor_county = cvidata.Origin.Address.County.toString();
		gr.consignor_state = cvidata.Origin.Address.State.toString();
		gr.consignor_zip = cvidata.Origin.Address.ZIP.toString();
		gr.consignor_lat = cvidata.Origin.Address.GeoPoint['@Latitude'].toString();
		gr.consignor_long = cvidata.Origin.Address.GeoPoint['@Longitude'].toString();
		for(var f=0; f<cvidata.Origin.StateZoneOrAreaStatus.length; f++){
			if(cvidata.Origin.StateZoneOrAreaStatus[f].BrucellosisStateOrAreaStatus['@Status'] !== undefined){
				if(cvidata.Origin.StateZoneOrAreaStatus[f].BrucellosisStateOrAreaStatus['@Status'] == 'Free'){
					gr.u_brucellosis_free = true;
				}else{
					gr.u_brucellosis_free = false;
				}
			}
			if(cvidata.Origin.StateZoneOrAreaStatus[f].TuberculosisStateOrZoneStatus['@Status'] !== undefined){
				if(cvidata.Origin.StateZoneOrAreaStatus[f].TuberculosisStateOrZoneStatus['@Status'] == 'Free'){
					gr.u_tb_free = true;
				}else{
					gr.u_tb_free = false;
				}
			}
		}
		gr.consignor_name = cvidata.Origin.Person[0].Name.toString();
		gr.consignor_phone = cvidata.Origin.Person[0].Phone[0]['@Number'].toString();
		gr.consignor_email = cvidata.Origin.Person[0].Email[0]['@Address'].toString();

		// Destination information - using this information instead of the Consignee information
		gr.consignee_premid = cvidata.Destination.PremId.toString();
		gr.consignee = cvidata.Destination.PremName.toString();
		gr.conisgnee_street = cvidata.Destination.Address.Line1.toString() + '\n' + cvidata.Destination.Address.Line2.toString();
		gr.consignee_city = cvidata.Destination.Address.Town.toString();
		gr.consignee_county = cvidata.Destination.Address.County.toString();
		gr.consignee_state = cvidata.Destination.Address.State.toString();
		gr.consignee_zip = cvidata.Destination.Address.ZIP.toString();
		gr.consignee_lat = cvidata.Destination.Address.GeoPoint['@Latitude'].toString();
		gr.consignee_long = cvidata.Destination.Address.GeoPoint['@Longitude'].toString();
		gr.consignee_name = cvidata.Destination.Person[0].NameParts.FirstName.toString() + " " + cvidata.Destination.Person[0].NameParts.LastName.toString();
		gr.consignee_phone = cvidata.Destination.Person[0].Phone[0]['@Number'];
		gr.consignee_email = cvidata.Destination.Person[0].Email[0]['@Address'];

		// Carrier information
		for(var g=0; cvidata.Carrier.Person.length; g++){
			if(cvidata.Carrier.Person[g].NameParts !== undefined){
				gr.carrier_name_and_address = cvidata.Carrier.Person[g].NameParts.BusinessName.toString();
			}
		}

		// Accession information
		/*var acchelper = new XMLHelper();
		var accdata = acchelper.toObject(current);*/
		var accdata = cvidata;
		var accCount = accdata.Accessions.Accession.length;
		for(var a = 0; a<accCount; a++){
			if(accdata.Accessions.Accession[a].Laboratory !== undefined){
				acc.num = accdata.Accessions.Accession[a].Laboratory['@AccessionNumber'];
				acc.lab = accdata.Accessions.Accession[a].Laboratory.LabName;
				acc.date = accdata.Accessions.Accession[a].Laboratory['@AccessionDate'];
			}else{
				acc.date = accdata.Accessions.Accession[a].Field['@AccessionDate'];
			}
			acc.id = accdata.Accessions.Accession[a]['@id'];
			accGroup.push(acc);
			acc = {"id": {}, "date": {}, "num": {}, "lab": {}};
		}

		// Animal information
		/*var animhelper = new XMLHelper();
		var animdata = animhelper.toObject(current);*/
		var animdata = cvidata;
		var animCount = animdata.Animal.length;
		for(var i = 0; i<animCount; i++){
			anim.age = animdata.Animal[i]['@Age'];
			anim.breed = animdata.Animal[i]['@Breed'];
			anim.sex = animdata.Animal[i]['@Sex'];
			anim.inspection = animdata.Animal[i]['@InspectionDate'];
			if(animdata.Animal[i].SpeciesCode !== undefined){
				animspecies = animdata.Animal[i].SpeciesCode['@Text'];
			}else{
				anim.species = animdata.Animal[i].SpeciesOther['@Text'];
			}
			if(animdata.Animal[i].AnimalTags.AIN !== undefined){
				anim.id = animdata.Animal[i].AnimalTags.AIN['@Number'];
			}
			if(animdata.Animal[i].AnimalTags.MfrRFID !== undefined){
				anim.id = animdata.Animal[i].AnimalTags.MfrRFID['@Number'];
			}
			if(animdata.Animal[i].AnimalTags.NUES9 !== undefined){
				anim.id = animdata.Animal[i].AnimalTags.NUES9['@Number'];
			}
			if(animdata.Animal[i].AnimalTags.NUES8 !== undefined){
				anim.id = animdata.Animal[i].AnimalTags.NUES8['@Number'];
			}
			if(animdata.Animal[i].AnimalTags.OtherOfficialID !== undefined){
				anim.id = animdata.Animal[i].AnimalTags.OtherOfficialID['@Number'];
			}
			if(animdata.Animal[i].Test.length >= 0){
				for(b = 0; b<animdata.Animal[i].Test.length; b++){
					acctemp = animdata.Animal[i].Test[b]['@AccessionRef'];
					for (var c=0; c<accGroup.length; c++){
						if(accGroup[c].id == acctemp){
							animTestDet.AccNum = accGroup[c].num;
							animTestDet.Date = accGroup[c].date;
							animTestDet.Lab = accGroup[c].lab;
						}
					}
					animTestDet.TestCode = animdata.Animal[i].Test[b]['@TestCode'];
					animTestDet.Name = animdata.Animal[i].Test[b].Result[0]['@ResultName'];
					if(animdata.Animal[i].Test[b].Result[0].ResultInteger !== undefined){
						animTestDet.Result = animdata.Animal[i].Test[b].Result[0].ResultInteger;
					}
					if(animdata.Animal[i].Test[b].Result[0].ResultFloat !== undefined){
						animTestDet.Result = animdata.Animal[i].Test[b].Result[0].ResultFloat;
					}
					if(animdata.Animal[i].Test[b].Result[0].ResultString !== undefined){
						animTestDet.Result = animdata.Animal[i].Test[b].Result[0].ResultString;
					}
					anim.test.push(animTestDet);
					animTestDet = {"TestCode": {}, "Name": {}, "Result": {}, "Date": {}, "Lab": {}, "AccNum": {}};
				}
			}
			animGroup.push(anim);
			anim = {"age": {}, "breed": {}, "sex": {}, "inspection": {}, "species": {}, "id": {}, "test": []};
		}

		// Create animal records
		var animal = new GlideRecord('x_cria_livestock_t_batchfill_import_cvi');
		animal.initialize();
		for(var d=0; d<animGroup.length; d++){
			animal.official_identification = animGroup[d].id.toString();
			animal.age = animGroup[d].age.toString();
			animal.breed = animGroup[d].breed.toString();
			animal.sex = animGroup[d].sex.toString();
			animal.species = animGroup[d].species.toString();
			animal.parent = gr.sys_id;
			for(var e=0; e<5; e++){
				if(e === 0){
					animal.acc_num_one = animGroup[d].test[e].AccNum.toString();
					animal.acc_date_one = animGroup[d].test[e].Date;
					animal.acc_lab_one = animGroup[d].test[e].Lab.toString();
					animal.acc_result_one = animGroup[d].test[e].Result.toString();
					animal.acc_test_one = animGroup[d].test[e].TestCode.toString();
					animal.acc_test_name_one = animGroup[d].test[e].Name.toString();
				}
				if(e === 1){
					animal.acc_num_two = animGroup[d].test[e].AccNum.toString();
					animal.acc_date_two = animGroup[d].test[e].Date;
					animal.acc_lab_two = animGroup[d].test[e].Lab.toString();
					animal.acc_result_two = animGroup[d].test[e].Result.toString();
					animal.acc_test_two = animGroup[d].test[e].TestCode.toString();
					animal.acc_test_name_two = animGroup[d].test[e].Name.toString();
				}
				if(e === 2){
					animal.acc_num_three = animGroup[d].test[e].AccNum.toString();
					animal.acc_date_three = animGroup[d].test[e].Date;
					animal.acc_lab_three = animGroup[d].test[e].Lab.toString();
					animal.acc_result_three = animGroup[d].test[e].Result.toString();
					animal.acc_test_three = animGroup[d].test[e].TestCode.toString();
					animal.acc_test_name_three = animGroup[d].test[e].Name.toString();
				}
				if(e === 3){
					animal.acc_num_four = animGroup[d].test[e].AccNum.toString();
					animal.acc_date_four = animGroup[d].test[e].Date;
					animal.acc_lab_four = animGroup[d].test[e].Lab.toString();
					animal.acc_result_four = animGroup[d].test[e].Result.toString();
					animal.acc_test_four = animGroup[d].test[e].TestCode.toString();
					animal.acc_test_name_four = animGroup[d].test[e].Name.toString();
				}
				if(e === 4){
					animal.acc_num_five = animGroup[d].test[e].AccNum.toString();
					animal.acc_date_five = animGroup[d].test[e].Date;
					animal.acc_lab_five = animGroup[d].test[e].Lab.toString();
					animal.acc_result_five = animGroup[d].test[e].Result.toString();
					animal.acc_test_five = animGroup[d].test[e].TestCode.toString();
					animal.acc_test_name_five = animGroup[d].test[e].Name.toString();
				}
			}
			animal.insert();
		}

		// Update the gr record with XML values
		gr.update();
	}
})(gr, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>thigley@criadvantage.com</sys_created_by>
        <sys_created_on>2019-04-11 22:23:38</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path/>
        <sys_id>6e082374db3037009b2689584b961917</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>Import CVI XML1</sys_name>
        <sys_overrides display_value="Import CVI XML">559b0b34db343700c64e5eea4b9619a8</sys_overrides>
        <sys_package display_value="Livestock Tracking" source="x_cria_livestock_t">7b1a2026dba09700df68f2b6ae96198c</sys_package>
        <sys_policy/>
        <sys_scope display_value="Livestock Tracking">7b1a2026dba09700df68f2b6ae96198c</sys_scope>
        <sys_update_name>sys_script_6e082374db3037009b2689584b961917</sys_update_name>
        <sys_updated_by>thigley@criadvantage.com</sys_updated_by>
        <sys_updated_on>2019-07-01 20:00:15</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=6e082374db3037009b2689584b961917"/>
</record_update>
