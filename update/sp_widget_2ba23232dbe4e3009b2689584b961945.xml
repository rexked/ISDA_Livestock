<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function ($scope, spModal, spNavStateManager, spUtil) {
    /* widget controller */
    var c = this;

   var widgetId = 'form-widget-copy';

    //Batchfill function

    $scope.batchFill = function () {

        spModal.open({
            size: "lg",
            title: "Batch Fill Brucellosis Market",
            widget: '938afa32dbe4e3009b2689584b961933',
            shared: c.data,
            buttons: [
                {
                //    label: "Submit", primary: true
                }
			]

        }).then(function () {

            c.server.update();
           $scope.page.g_form.setValue('widget_records', c.data.sys_ids.toString());
        })

    }


    //Delete the line function

    $scope.deleteTheLine = function (table, item) {

        c.data.toBeDeleted = item.sys_id;

        console.log("button was pressed" + " " + table + " " + item.sys_id);
        c.data.deleteLine = 'true';
        c.server.update();
			$scope.page.g_form.setValue('widget_records', c.data.sys_ids.toString());

    };

    //New button

    $scope.newRecord = function () {

        
        var widgetInput = {
            table: $scope.data.table,
            view: $scope.data.view,
            sys_id: '-1'
        }

        spModal.open({
            title: '',
            widget: widgetId,
            size: 'lg',
            widgetInput: widgetInput,
            buttons: [
                {
                    label: '${OK}',
                    primary: true
				}
			]
        }).then(function () {
            //console.log('it did something at least');
            c.server.update();
            $scope.page.g_form.setValue('widget_records', c.data.sys_ids.toString());
        })
    }

    //Open a record on click to a new modal
    $scope.go = function (table, item) {
       
        var widgetInput = {
            table: $scope.data.table,
            view: $scope.data.view,
            sys_id: item.sys_id

        };



        spModal.open({
            title: "Lab Result",
            widget: widgetId,
            size: 'md',
            widgetInput: widgetInput,
            buttons: [
                {
                    label: '${OK}',
                    primary: true
				}
			]

        }).then(function () {
            spUtil.update($scope);
            $scope.page.g_form.setValue('widget_records', c.data.sys_ids.toString());
        });

    };




    //builds the record watcher
    spUtil.recordWatch($scope, c.data.table, c.data.filter, function (name, data) {
        spUtil.update($scope);
        $scope.page.g_form.setValue('widget_records', c.data.sys_ids.toString());
    })
    //console.log("i'm watching you: " + c.data.table + " with a filter of: " + c.data.filter);

}]]></client_script>
        <controller_as>c</controller_as>
        <css>.panel-heading {
  padding-left: 8px;
}

thead.th.span {
  border-bottom: 1px solid #ddd;
}

thead {
  border-bottom: 1px solid #ddd;
}

table {
  margin-bottom: 0;
}

.table &gt; thead &gt; tr &gt; th {
  border: 1px solid #ddd;
  cursor: pointer;
  vertical-align: middle;

  &amp;:nth-child(2) {
    border-left: none;
  }

.glyphicon-remove{
  
  color: #538ac5;
}

  &amp;:last-child {
    border-right: none;
  }
}

th i {
  display: inline-block;
  margin-left: 5px;
  color: #A0A0A0;
}

th .disabled{
  color:#ddd;
}

.th-title {
  display: inline-block;
  color: $primary;
}

.panel-body {
  overflow: auto;
  padding: 0px;
}


.selected {
  color: #fff;
  background-color: #909090;
  border-color: 1px solid #fff;
}

tbody tr:last-child {
  border-bottom: none;
}

.pruned-msg {
  padding-bottom: 10px;
  padding-left: 4px;
  text-align: center;
}

.pruned-msg-filter-pad {
  padding-top:8px;
}

.filter-breadcrumbs {
  border-bottom: 1px solid #ddd;
  padding-top: 3px;
}

.dropdown-toggle {
  background: none;
  padding: 0 0 4px 0;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>livestock-mkt-cattle-draft-batch</id>
        <internal>false</internal>
        <link/>
        <name>Livestock Mkt Cattle Draft Batch</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function () {

    /* populate the 'data' object */
    /* e.g., data.table = $sp.getValue('table'); */

    data.title = '';
    data.table = 'x_cria_livestock_t_lab_results_bruc_market_cattle';
		data.record = $sp.getParameter("sys_id");
    data.filter = 'parent='+ data.record;
    data.table_label = '';
    data.fields_array = [];
    data.view = 'default view';
    data.sys_ids = [];
    data.action = undefined;
    data.deleteLine = 'false';
    data.toBeDeleted = '';
    data.updated = '';


    if (!data.fields) {
        if (data.view) {
            //console.log("using the view");
            data.fields = $sp.getListColumns(data.table, data.view);
        } else
            data.fields = $sp.getListColumns(data.table);
    }

    //console.log("data.fields = " + data.fields);

    data.column_labels = {};
    data.fields_array = data.fields.split(',');

    var gr = new GlideRecord(data.table);
    gr.initialize();
    gr.addEncodedQuery(data.filter);
    gr.orderBy('number');
    gr.query();

    data.list = [];
    while (gr._next()) {

        data.sys_ids.push(gr.sys_id.toString());
        var record = {};
        $sp.getRecordElements(record, gr, data.fields);
        record.sys_id = gr.getValue('sys_id');
        data.list.push(record);
    }

    // use GlideRecord to get field labels vs. GlideRecordSecure
    var grForLabels = new GlideRecord(data.table);
    for (var i in data.fields_array) {
        var field = data.fields_array[i];
        var ge = grForLabels.getElement(field);
        if (ge == null)
            continue;

        data.column_labels[field] = ge.getLabel();
    }

    if (data.deleteLine == 'true') {

        data.sys_ids = [];
        console.log(data.sys_ids);
        gr.initialize();
        gr.get(input.toBeDeleted);
        gr.deleteRecord();
        data.deleteLine = 'false';
        gr.initialize();

        gr.addEncodedQuery(data.filter);
        gr.orderBy('number');
        gr.query();

        while (gr._next()) {
            data.sys_ids.push(gr.sys_id.toString());
        }
    }

})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>dmorden@criadvantage.com</sys_created_by>
        <sys_created_on>2018-09-18 17:11:30</sys_created_on>
        <sys_id>2ba23232dbe4e3009b2689584b961945</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>Livestock Mkt Cattle Draft Batch</sys_name>
        <sys_package display_value="Livestock Tracking" source="x_cria_livestock_t">7b1a2026dba09700df68f2b6ae96198c</sys_package>
        <sys_policy/>
        <sys_scope display_value="Livestock Tracking">7b1a2026dba09700df68f2b6ae96198c</sys_scope>
        <sys_update_name>sp_widget_2ba23232dbe4e3009b2689584b961945</sys_update_name>
        <sys_updated_by>thigley@criadvantage.com</sys_updated_by>
        <sys_updated_on>2019-10-24 15:31:54</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-body">
   

   <div class="panel-heading form-inline">
      <span class="panel-title"><i ng-if="options.glyph" class="fa fa-{{options.glyph}} m-r"></i>{{data.title}}</span>
  <button name="new" role="link" class="btn btn-primary btn-sm m-l-xs" ng-click="newRecord()" aria-label="${Create new record}">${New}</button>
  <button name="batchfill" class="btn btn-primary btn-sm m-l-xs" ng-click="batchFill()" aria-label="${Batch Fill}">${Batch Fill}</button>
  </div>
  
    <div class="alert alert-info" ng-if="!data.list.length && !data.num_pages && !data.invalid_table && !loadingData">
        ${No records in {{data.table_label}} <span ng-if="data.filter">using that filter</span>}
      </div>
      <div class="alert alert-info" ng-if="loadingData">
          <fa name="spinner" spin="true"></fa> ${Loading data}...
       </div>
      <table class="table table-striped table-responsive" ng-if="data.list.length">
        <thead>
          <tr>
            <th class="sr-only"></th>
            <th ng-repeat="field in data.fields_array track by $index" tabindex="0">
              <div class="th-title" >{{data.column_labels[field]}}</div>
            </th>
            <th><span class="remove glyphicon glyphicon-remove"></span>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr ng-repeat="item in data.list">
            <td class="sr-only" tabindex="0" role="link" ng-click="go(data.table, item)" aria-label="${Open record}"></td>
            <td role="text" aria-label="{{item[field].display_value}}" class="pointer" ng-class="{selected: item.selected}" ng-click="go(data.table, item)" ng-repeat="field in ::data.fields_array" data-field="{{::field}}" data-th="{{::data.column_labels[field]}}">{{::item[field].display_value}}
            <td>
            <span class="delete glyphicon glyphicon-remove" style="color: #d9534f" ng-click="deleteTheLine(data.table , item)"></span>
            </td>
          </tr>
        </tbody>
      </table>
</div>
</div>

]]></template>
    </sp_widget>
</record_update>
