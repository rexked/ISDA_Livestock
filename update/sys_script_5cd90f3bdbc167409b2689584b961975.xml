<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_cria_livestock_t_vaccinations_market_cattle</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Import animals from attachments</name>
        <order>1000</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	// Set the following variables with the name of your import set table and task id column
	var importSetTableName = "x_cria_livestock_t_market_cattle_temp";
	var transformMapIDs = "96bbf137db402b00c64e5eea4b961913";   //Use a comma to specify multiple transform maps
	
	// Create data source for attachment
	var dataSource = new GlideRecord("sys_data_source");
	dataSource.initialize();
	dataSource.name = "Test Import";
	dataSource.import_set_table_name = importSetTableName;
	dataSource.file_retrieval_method = "Attachment";
	dataSource.type = "File";
	dataSource.format = "Excel";
	dataSource.header_row = 1;
	dataSource.sheet_number = 1;
	var dataSourceID = dataSource.insert();
	
	// Copy the attachment to the data source
	GlideSysAttachment.copy('x_cria_livestock_t_vaccinations_market_cattle', current.sys_id, "sys_data_source", dataSourceID);
	
	// Process datasource file to import set table
	var importSetRecID = new global.FileImportUtils().processFile(dataSource);
	
	// Update processed rows with parent value
	var importSetRow = new GlideRecord(importSetTableName);
	importSetRow.addQuery("sys_import_set", importSetRecID);
	importSetRow.query();
	while (importSetRow.next()) {
		importSetRow.parent = current.sys_id;
		importSetRow.update();
	}
	
	// Transform the import set records
	new global.FileImportUtils().transformImportSet(importSetRecID, transformMapIDs);
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>thigley@criadvantage.com</sys_created_by>
        <sys_created_on>2018-10-16 17:57:54</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>5cd90f3bdbc167409b2689584b961975</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>Import animals from attachments</sys_name>
        <sys_overrides/>
        <sys_package display_value="Livestock Tracking" source="x_cria_livestock_t">7b1a2026dba09700df68f2b6ae96198c</sys_package>
        <sys_policy/>
        <sys_scope display_value="Livestock Tracking">7b1a2026dba09700df68f2b6ae96198c</sys_scope>
        <sys_update_name>sys_script_5cd90f3bdbc167409b2689584b961975</sys_update_name>
        <sys_updated_by>tsears</sys_updated_by>
        <sys_updated_on>2020-04-13 13:24:38</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=5cd90f3bdbc167409b2689584b961975"/>
</record_update>
